<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/resources/*" location="/resources/"  cache-period="31556926"/>
	<context:property-placeholder location="classpath:application.properties" /> 
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	 <beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<beans:property name="driverClass" value="${jdbc.driverClass}" />
		<beans:property name="jdbcUrl" value="${jdbc.url}" />
		<beans:property name="user" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
		
		<beans:property name="acquireIncrement" value="${connection.acquireIncrement}" />
		<beans:property name="minPoolSize" value="${connection.minPoolSize}" />
		<beans:property name="maxPoolSize" value="${connection.maxPoolSize}" />
		<beans:property name="maxIdleTime" value="${connection.maxIdleTime}" />
	</beans:bean> 
	
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<beans:property name="dataSource" ref="dataSource"></beans:property>
			<beans:property name="hibernateProperties">
			<beans:props>
			<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
			<beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop>
			<beans:prop key="hibernate.format_sql">${hibernate.format_sql}</beans:prop>
			<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
			</beans:props>
			</beans:property>
			<beans:property name="packagesToScan" value="com.mywork.resumeprocessing.model"></beans:property>
	</beans:bean>
	
	<beans:bean id="empDAO" class="com.mywork.resumeprocessing.dao.ApplicantDAO">
	</beans:bean>
	
	<beans:bean id="interviewerDAO" class="com.mywork.resumeprocessing.dao.InterviewerDAO">
	</beans:bean>
	
	<beans:bean id="hibernateUtil" class="com.mywork.resumeprocessing.util.ApplicantHibernateUtil">
	</beans:bean>

	<beans:bean id="interviewerHibernateUtil" class="com.mywork.resumeprocessing.util.InterviewerHibernateUtil">
	</beans:bean>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	
	<beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <beans:property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
         
        <!-- max size of file in memory (in bytes) -->
        <beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
    </beans:bean>
	
		
	<tx:annotation-driven transaction-manager="transactionManager" /> 
	<context:component-scan base-package="com.mywork.resumeprocessing.*" />
	<!-- Enables the Spring MVC @Controller programming model -->
	<!--   -->
	
</beans:beans>
